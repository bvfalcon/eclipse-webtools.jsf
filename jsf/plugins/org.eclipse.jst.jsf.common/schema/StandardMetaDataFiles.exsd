<?xml version='1.0' encoding='UTF-8'?>
<!-- Schema file written by PDE -->
<schema targetNamespace="org.eclipse.jst.jsf.common">
<annotation>
      <appInfo>
         <meta.schema plugin="org.eclipse.jst.jsf.common" id="StandardMetaDataFiles" name="StandardMetaDataFiles"/>
      </appInfo>
      <documentation>
         Defines a file of metadata for a given URI in &quot;standard&quot; form loadable by &lt;code&gt;org.eclipse.jst.jsf.common.metadata model&lt;/code&gt;

&lt;p&gt;&lt;b&gt;This extension point is provisional and subject to change&lt;/b&gt;&lt;/p&gt;
      </documentation>
   </annotation>

   <element name="extension">
      <complexType>
         <sequence>
            <element ref="standardMetaDataFile" minOccurs="1" maxOccurs="unbounded"/>
         </sequence>
         <attribute name="point" type="string" use="required">
            <annotation>
               <documentation>
                  
               </documentation>
            </annotation>
         </attribute>
         <attribute name="id" type="string">
            <annotation>
               <documentation>
                  
               </documentation>
            </annotation>
         </attribute>
         <attribute name="name" type="string">
            <annotation>
               <documentation>
                  
               </documentation>
               <appInfo>
                  <meta.attribute translatable="true"/>
               </appInfo>
            </annotation>
         </attribute>
      </complexType>
   </element>

   <element name="standardMetaDataFile">
      <annotation>
         <documentation>
            Mapping of a namespace URI to an XML file loadable by a standard metadata EMF model defined by &lt;code&gt;http://org.eclipse.jst.jsf.common.metadata/metadata.ecore&lt;/code&gt;.     See &lt;code&gt;org.eclipse.jst.jsf.standard.tagsupport&lt;/code&gt; plugin and the /metadata/jsf_core.xml file.
         </documentation>
      </annotation>
      <complexType>
         <attribute name="uri" type="string" use="required">
            <annotation>
               <documentation>
                  Content model URI being annotated.  eg.  &quot;http://java.sun.com/jsf/core&quot;.   This can, of course, be any string that the consumer wishes to use as a key.
               </documentation>
            </annotation>
         </attribute>
         <attribute name="location" type="string" use="required">
            <annotation>
               <documentation>
                  Location of the annotation file.   If no locator is provided, it will use the default &lt;code&gt;PluginRelativeStandardMetaDataSourceFileLocator&lt;/code&gt; which will find the file in a location relative to the plugin.
eg. /metadata/jsf_core.xml
               </documentation>
            </annotation>
         </attribute>
         <attribute name="locator" type="string">
            <annotation>
               <documentation>
                  Class extending &lt;code&gt;org.eclipse.jst.jsf.common.metadata.internal.StandardMetaDataSourceFileLocator&lt;/code&gt; that will be used to locate the standard metadata file.
               </documentation>
               <appInfo>
                  <meta.attribute kind="java" basedOn="org.eclipse.jst.jsf.common.metadata.internal.StandardMetaDataSourceFileLocator"/>
               </appInfo>
            </annotation>
         </attribute>
      </complexType>
   </element>

   <annotation>
      <appInfo>
         <meta.section type="since"/>
      </appInfo>
      <documentation>
         2.0
      </documentation>
   </annotation>

   <annotation>
      <appInfo>
         <meta.section type="examples"/>
      </appInfo>
      <documentation>
         &lt;extension
         point=&quot;org.eclipse.jst.jsf.common.standardMetaDataFiles&quot;&gt;
      &lt;standardMetaDataFile
            location=&quot;/metadata/JSF_HTML.xml&quot;
            uri=&quot;http://java.sun.com/jsf/html&quot;&gt;
      &lt;/standardMetaDataFile&gt;
   &lt;/extension&gt;
      </documentation>
   </annotation>

   <annotation>
      <appInfo>
         <meta.section type="apiInfo"/>
      </appInfo>
      <documentation>
         
      </documentation>
   </annotation>

   <annotation>
      <appInfo>
         <meta.section type="implementation"/>
      </appInfo>
      <documentation>
         
      </documentation>
   </annotation>

   <annotation>
      <appInfo>
         <meta.section type="copyright"/>
      </appInfo>
      <documentation>
         Copyright 2007 Oracle
All rights reserved. This program and the accompanying materials are made available under the terms of the Eclipse Public License v1.0 which accompanies this distribution, and is available at http://www.eclipse.org/legal/epl-v10.html
      </documentation>
   </annotation>

</schema>
